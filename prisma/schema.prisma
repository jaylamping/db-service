generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Sport {
  id        String    @id @default(uuid()) @map("_id")
  name      String    @unique
  logo_url  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  League    League[]
  Matchup   Matchup[]
  Team      Team[]
}

model League {
  id        String    @id @default(uuid()) @map("_id")
  name      String    @unique
  logo_url  String?
  Sport     Sport     @relation(fields: [sport], references: [id])
  sport     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Team      Team[]
  Matchup   Matchup[]
}

model Team {
  id        String    @id @default(uuid()) @map("_id")
  name      String
  location  String?
  logo_url  String?
  League    League    @relation(fields: [league], references: [name])
  league    String
  Sport     Sport     @relation(fields: [sport], references: [name])
  sport     String
  HomeTeam  Matchup[] @relation("HomeTeam")
  AwayTeam  Matchup[] @relation("AwayTeam")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Matchup {
  id              String   @id @default(uuid()) @map("_id")
  externalId      String   @unique
  name            String
  description     String?
  dateTime        DateTime
  HomeTeam        Team     @relation("HomeTeam", fields: [homeTeam], references: [id])
  homeTeam        String
  AwayTeam        Team     @relation("AwayTeam", fields: [awayTeam], references: [id])
  awayTeam        String
  Sport           Sport    @relation(fields: [sport], references: [id])
  sport           String
  League          League   @relation(fields: [league], references: [id])
  league          String
  logo_url        String?
  inProgress      Boolean?
  primaryStream   String?
  secondaryStream String?
  tertiaryStream  String?
  fallbackStream  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([homeTeam, awayTeam, dateTime])
}
